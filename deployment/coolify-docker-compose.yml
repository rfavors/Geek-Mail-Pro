version: '3.8'

services:
  geek-mail-pro:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geek-mail-pro-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: ${DATABASE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      REPL_ID: ${REPL_ID}
      REPLIT_DOMAINS: ${REPLIT_DOMAINS}
      ISSUER_URL: ${ISSUER_URL:-https://replit.com/oidc}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN:-thegeektrepreneur.com}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - uploads:/app/uploads
    networks:
      - geek-mail-pro-network

  postgres:
    image: postgres:15-alpine
    container_name: geek-mail-pro-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PGDATABASE:-geek_mail_pro}
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geek-mail-pro-network

  redis:
    image: redis:7-alpine
    container_name: geek-mail-pro-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - geek-mail-pro-network

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  geek-mail-pro-network:
    driver: bridge